// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_URL")
}

model User {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique @db.String
  name  String @db.String

  age Int?
  sex Gender?

  credentials Credential?

  createdAt DateTime @default(now()) @map("created_at")

  starting_weight Float? @map("starting_weight")
  current_weight  Float? @map("current_weight")
  height          Int?

  lifestyle ActivityLevel?

  foodRestrictions Sensitivity[] @map("food_restrictions")
  healthIssues     HealthIssue[] @map("health_issues")
  activeDiet       Diet?         @map("active_diet")

  surveyed Boolean @default(false)

  favorites Favorite[]

  roles           Roles[]
  OneTimePassword OneTimePassword?
}

enum ActivityLevel {
  SEDENTARY
  LIGHT
  MODERATE
  VERY
  SUPER
}

enum Gender {
  MALE
  FEMALE
}

enum Roles {
  ADMIN
  DATA
}

enum Sensitivity {
  PEANUTS
  TREENUTS
  FISH
  SHELLFISH
  SOY
  EGG
  WHEAT
  DAIRY
  SESAME
  MUSTARD
  GLUTEN

  ALCOHOL
  BEEF
  PORK

  // histamines will be later, they are more complex
}

enum HealthIssue {
  IBS
  DIABETES
  HBP
  CANCER
  OBESITY
  KIDNEY_DISEASE
  HEART_DISEASE
}

enum Diet {
  MEDITERRANEAN
  KETO
  PALEO
  VEGAN
  CARNIVORE
  ATKINS
}

model Recipe {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  recipeId    Int         @unique
  ingredients Json[]
  imageURL    String
  nutrition   Nutrition[]

  favorites Favorite[]

  @@map("recipes")
}

model Nutrition {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  recipeId String @db.ObjectId
  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  name     String
  amount   Float
  unit     String

  @@map("nutrition")
}

enum CredentialType {
  OAUTH
  PASSWORDHASH
}

model Credential {
  id       String         @id @default(auto()) @map("_id") @db.ObjectId
  type     CredentialType
  value    String         @db.String
  provider Provider?

  userId String @unique @db.ObjectId

  user User @relation(fields: userId, references: id, onDelete: Cascade)
}

enum Provider {
  GOOGLE
  GITHUB
}

model Favorite {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  recipeId  String   @db.ObjectId
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  recipe Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)

  @@unique([userId, recipeId])
}

model OneTimePassword {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  otp       String
  createdAt DateTime @default(now())
  expiresAt DateTime
  userId    String   @unique @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
